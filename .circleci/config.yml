# version: 2.1
# jobs:
#   build:
#     docker:
#       - image: node:16-alpine
#         auth:
#           username: $DOCKER_USER
#           password: $DOCKER_PW
#     steps:
#       - checkout

#       - setup_remote_docker:
#           version: 20.10.14
#           docker_layer_caching: true

#       - run:
#           name: Setup VirtualEnv
#           command: |
#             echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
#             echo 'export IMAGE_NAME=python-circleci-docker' >> $BASH_ENV 
#   test:
#     docker:
#       - image: docker:20220715
#         auth: 
#           username: $DOCKER_USER
#           password: $DOCKER_PW
#     steps:
#       - checkout


#       - run: |
#           echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin 
#           docker run -d --name db company/proprietary-db:1.2.3 
#           docker build -t company/app:$CIRCLE_BRANCH .  
#           docker push company/app:$CIRCLE_BRANCH     
#           docker build -t diliniiresha/docker-myp -f Dockerfile.dev .
#           docker run diliniiresha/docker-myp npm run test -- --coverage
version: 2.1
orbs: 
  aws-elastic-beanstalk: circleci/aws-elastic-beanstalk@2.0.1
branch-defaults:
  master:
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: "$AWS_SECRET_KEY"
global: 
  provider: elasticbeanstalk
  region: "us-east-1"
  name: "docker-myp"
  env: "Dockermyp-env"
  bucket_name: "elasticbeanstalk-us-east-1-120220778529"
  bucket_path: "docker-myp"



jobs:
  build:
    docker:
      - image: cimg/go:1.17
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      # ... steps for building/testing app ...

      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true

      # build and push Docker image
      - run: |
          docker build -t diliniiresha/docker-myp -f Dockerfile.dev .
          docker run diliniiresha/docker-myp npm run test -- --coverage
    deploy:
      working_directory: ~/app
      docker:
        - image: circleci/ruby:2.4.3
      steps:
        - checkout

        - run:
            name: Installing deployment dependencies
            working_directory: /
            command: |
              sudo apt-get -y -qq update
              sudo apt-get install python3-pip python3-dev build-essential
              sudo pip3 install awsebcli

        - run:
            name: Deploying
            command: eb deploy $CIRCLE_BRANCH-my-application

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          filters:
            branches:
              only:
                - staging
                - master      

